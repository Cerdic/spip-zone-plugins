<plugin>
	<nom>Plugin Install&#233;</nom>
	<slogan>Tester si un plugin est install&#233;</slogan>
	<auteur>Pierre Andrews (Mortimer)</auteur>
	<licence>&#169; 2006 GPL</licence>
	<version>0.1.0</version>
	<etat>test</etat>
	<description>
	<multi>[fr]	
Ce plugin fournit une balise <code>#PLUGIN_PAS_INSTALLE</code> pour tester qu'un plugin est install&#233;. Ainsi, on peut utiliser une inclusion conditionelle dans le squelette:

<code>[(#PLUGIN_PAS_INSTALLE{'monplugin'}|?{'',' '})&lt;INCLURE{fond=squelette_plugin}&gt;]</code>

Pour que ce test ne fasse pas l'inclusion quand ce plugin n'est pas install&#233;, le test de la balise est "invers&#233;": on test donc qu'un plugin n'est pas install&#233;
[en]
This plugin provides a new tag <code>#PLUGIN_PAS_INSTALLE</code> that allows you to test if a plugin is installed or not. This way, you can do a conditional inclusion:

<code>[(#PLUGIN_PAS_INSTALLE{'monplugin'}|?{'',' '})&lt;INCLURE{fond=squelette_plugin}&gt;]</code>

For this test to fail when this plugin is not installed, the test is inverted. Therefore, the tag test if a plugin is NOT installed.
</multi>
	</description>
	<!-- prefixe des fonctions, filtres et fichers de votre plugin : 
		toutes vos fonctions doivent commencer par ce prefixe suivi de _ (ici : template_ma_fonction() par exemple)
		C'est par ailleurs conseille pour les noms de fichier
		Deux plugin ne peuvent pas avoir le meme prefixe, donc ne gardez pas celui la ! :)
		-->
	<prefix>pi</prefix>
	<necessite id="SPIP" version="[1.9.0;1.9.2]" />
	<categorie>outil</categorie>
</plugin>
