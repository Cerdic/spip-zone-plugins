TODO.txt (fichier généré par le plugin Atelier 2008-07-24 01:01:26)
-------------------------------------------------------------------

* gestion des dictionnaires :
créer une page permettant d'ajouter des définitions dans le fichier de langue du plugin


* génération du fichier TODO.txt :
permettre de générer un fichier TODO.txt créer à partir des taches du projet. Ce fichier devra être placé à la racine du plugin


* génération du fichier plugin.xml :
Faire un formulaire permettant de générer/modifier le fichier plugin.xml d'un plugin.


* probleme choix par defaut "taches_edit" :
Le choix par défaut du projet lors de l'édition d'une nouvelle tache doit être le projet d'origine et non le premier projet.

Passage du parametre id_projet.


* Bloc statistique page "lecture de projet" :
Faire un bloc statistique lorsque l'on lit un projet :
- nombres de taches ouvertes
- nombres de taches fermées
- etc ...


* Formatage du texte façon SPIP :
appliquer le formatage des textes façon spip dans les champs descriptif des taches et des projets


* Gestion pages CFG :
ajouter une gestion des pages CFG

- Visualisation
- Edition
- Etc ...


* Assigner un auteur aux taches :
Possibilité de d'assigner à l'un des auteurs enregistrer une ou plusieurs taches.


* Assigner un degrès d'urgence aux taches :
Possibilité d'assigner un degrès d'urgence aux taches (1,2,3,4,5)

- 1 : très urgent
- 2 : urgent
- 3 : moyennement urgent
- 4 : peu urgent
- 5 : très peu urgent

Utiliser les mots-clés ?


* Visualisation des metas :
Une page ou un bloc pour pouvoir lire les metas


* Enregistrer les modifications dans les metas :
Trouver un moyen d'enregistrer les modifications effectué dans la page de visualisation des metas.


* Lien vers la documentation du code :
Ajouter un lien vers la documentation du code de spip


* probleme url retour ajout d'une entrée dans le dictionnaire :
faire en sorte de revenir vers le dictionnaire que l'on édite lorsque l'on ajoute une nouvelle entrée dans le dico


* completer la correction des caractères dans les entrée dicos :
faire tous les accents et les caractères spéciaux


* permettre de supprimer une entrée dans le dico :



* [svn] ajouter les options de commit / add / del :
- Pour les projets ayant été importé de cette manière, ajouter des options de commit et d'update


* Faire un tri alphabétique des entrée du dico :



* probleme lors ajout definition (lang) :
envoyé la langue au formulaire, sinon langue par defaut = fr, et le mauvais fichier est mis à jour ...


* créer un menu "taches" pour y placer les liens version "taches fermée" et "toutes les taches" :
Du coup en profiter pour virer ces deux cadre de la page principale d'un projet


* définition des objets SPIP :
faire une définition de tous les objets SPIP qu'il est possible de générer :
- une feuille privée : un fichier exec dans l'espace privée
- une feuille publique : un fichier html basique de spip
- un formulaire privée : un fichier inc appelé a partir d'une feuille
- un formulaire publique : ajout d'un formulaire publique
- une action privée : l'action engendrée par un formulaire
- une balise publique: ajout d'une balise publique

- etc ...


* permettre de modifier les gabarits de fichier :
Soumettre à la liste les exemples de gabarits.
Ne pas hesiter à y mettre la blinde de commentaire pour guider le developpeur.


* Ajouter l'option Salvatore dans l'internationalisation :
Voir avec le plugin Salvatore ...


* [svn] permettre l'ajout dans la liste des génération automatique de zip :



* [SVN] mettre la description du plugin (plugin.xml) dans le camps description :
Lors de l'Importation


* Explorateur de fichier : permettre de cliquer sur un fichier pour l'editer :
faire un tableau ou chaque fichiers serait un liens vers une page d'edition


* [explorateur] Pour les fichiers exec, ajouter un lien "visualisation" :
Ce lien est l'url permettant d'afficher la présentation de la feuille.


* [Fichier langues] permettre une navigation par ordre alphabétique :
faire une navigation par onglet ou chaque onglet serait une lettre de l'alphabet


* [taches] permettre de leur assigner un numéro de version :
Par défaut la tache est assigné à la version de travail courante. Mais il est possible de les assigné à une version future


* [nouveau projet] création de l'arborescence de base :
Lors de la création d'un nouveau projet, proposer de créer l'orborescence de base


* [Fichier] donner le nom du fichier enregistrer dans le rapport :



* [fichier langue] Si il n'existe qu'un seul fichier lang, l'ouvrir immédiatement :



* [svn] refuser les commit sans commentaires :



* Améliorer la coloration syntaxique :



* [explorateur] le rendre "ajax" :
ne pas recharger toute la page mais juste le bloc.


* [importer un projet de la zone] pbm raccourcis :
retirer le liens "Retour au projet" qui ne sert à rien


* [SVN] garder dans la base de donnée user /pass :
Attention de bien codé le mot de passe. Ne pas le mettre en clair
Utiliser une nouvelle table spip_svn [id_auteur - key, user, pass]


* Ajouter une page de gestion des versions :
gestion des versions attaché à un projet. Nouveau champs dans la table spip_projets dans le style des metas.

Cette page permettra de créer des versions (0.1 0.2 0.3 etc ...)

Dans la page d'édition des taches, une tache devra être assigné à l'une de ces versions


* [liste des taches] classement par date  :
date de création pour les tache ouverte
date de fermeture pour les taches fermée


* [args des pages exec] rejet en cas de controle negatif :
Dans les fonctions args des pages exec, si un controle est effectué et que celui-ci est negatif, utiliser :

include_spip('inc/minipres');
echo minipres(_T('public:aucun_article'));

Pour rejeter l'utilisateur.


