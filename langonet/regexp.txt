langOnet (v.2)**********************************************  les regexp de recherche d'item  **********************************************la regexp suivante (pour scanner les fichiers .html et .php) :",(?:<:|_[T|U]\(['\"])(?:([a-z0-9_]+):)?([a-z0-9_]+)((?:{(?:[^\|=>]*=[^\|>]*)})?(?:(?:\|[^>]*)?)(?:['\"]\s*\.\s*[^\s]+)?),iS"à partir des utilisations possibles des items de langue listées ci-dessous :_T('pluga:item_de_langue1', array('dest'=>$dest, 'bli' => 'blo'))_T('module:item_de_langue2_' . $truc.'n')<:module:item_de_langue3{arg1=texte,arg2=#BALISE}|filtre1{texte,#BALISE}:><:plugb:item_de_langue4:><:item_de_langue5:>_T('module:item_de_langue6_'.$truc['bla'].'n')_T("item_de_langue7_" . $truc[$bla].'n')_U("item_de_langue8")_T("item_de_langue9' . is_string($val) ? '_'.$val : '')produit le tableau :[1]=> array  [0]=>pluga             [1]=>module             [2]=>module             [3]=>plugb             [4]=>             [5]=>module             [6]=>             [7]=>             [8]=>[2]=> array  [0]=>item_de_langue1             [1]=>item_de_langue2_             [2]=>item_de_langue3             [3]=>item_de_langue4             [4]=>item_de_langue5             [5]=>item_de_langue6_             [6]=>item_de_langue7_             [7]=>item_de_langue8             [8]=>item_de_langue9[3]=> array  [0]=>             [1]=>' . $truc             [2]=>{arg1=texte,arg2=#BALISE}|filtre1{texte,#BALISE}:>             [3]=>             [4]=>             [5]=>'.$truc             [6]=>" . $truc             [7]=>             [8]=>' . is_string($val)-------------------------la regexp suivante (pour scanner les fichiers .xml) :",<[a-z0-9_]+>[\n|\t|\s]*([a-z0-9_]+):([a-z0-9_]+)[\n|\t|\s]*</[a-z0-9_]+()>,iS"à partir des utilisations possibles des items de langue listées ci-dessous :<label>module:item_de_langue1</label><label>	module:item_de_langue2</label>produit le tableau :  => array[1] => [0] module                 [1] module  => array[2] => [0] item_de_langue1                 [1] item_de_langue2  => array[3] => [0]                 [1]-------------------------Limitations actuelles de la regexpPour CFG il est possible d'ecrire:<!-- onglet=item_fond1 --><!-- liens*=module:item_fond2 -->L'item est confondu avec le nom du fond CFG. La regexp ne trouve pas ces patterns.Aussi, la verification d'utilisation affichera les items item_fond1 et item_fond2 comme non utilises.*********************************************  la regexp de scan d'arborescence  *********************************************la regexp suivante :'(?<!/charsets|/lang|/req)(/[^/]*\.(html|php|xml))$'autorise le scan des fichiers .html, .php ou .xml(pour y chercher des items de langue utilisés)dans toute l'arborescence demandée SAUF SI ces fichiersse trouvent dans un sous-répertoire terminal de nom :  charsets/    (ex. : ecrire/charsets/)  lang/        (ex. : ecrire/lang/ ; squelettes/lang/ ; plugins/langonet/lang/)  req/         (ex. : ecrire/req/)